<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.campus.repository.ReceiveMessageMapper">
	<sql id="Base_Column_List">
		UID, SendMessageUID, ReceiveUserUID, SendTime, IsRead, ReadTime, CreateBy,
		CreateDate
	</sql>
	<select id="selectByPrimaryKey" resultType="org.campus.model.ReceiveMessage"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ts_app_receivemessage
		where UID = #{uid}
	</select>
	<select id="selectByreceiveUserId" resultType="org.campus.model.ReceiveMessage">
		select
		<include refid="Base_Column_List" />
		from ts_app_receivemessage
		where ReceiveUserUID = #{receiveUserId} AND DATE_SUB(CURDATE(), INTERVAL 30 DAY) <= DATE(CreateDate)
		ORDER BY CreateDate DESC
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from ts_app_receivemessage
		where UID = #{uid}
	</delete>
	<insert id="insertSelective" parameterType="org.campus.model.ReceiveMessage">
		insert into ts_app_receivemessage
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				UID,
			</if>
			<if test="sendmessageuid != null">
				SendMessageUID,
			</if>
			<if test="receiveuseruid != null">
				ReceiveUserUID,
			</if>
			<if test="sendtime != null">
				SendTime,
			</if>
			<if test="isread != null">
				IsRead,
			</if>
			<if test="readtime != null">
				ReadTime,
			</if>
			<if test="createby != null">
				CreateBy,
			</if>
			<if test="createdate != null">
				CreateDate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid},
			</if>
			<if test="sendmessageuid != null">
				#{sendmessageuid},
			</if>
			<if test="receiveuseruid != null">
				#{receiveuseruid},
			</if>
			<if test="sendtime != null">
				#{sendtime},
			</if>
			<if test="isread != null">
				#{isread},
			</if>
			<if test="readtime != null">
				#{readtime},
			</if>
			<if test="createby != null">
				#{createby},
			</if>
			<if test="createdate != null">
				#{createdate},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.campus.model.ReceiveMessage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Aug 09 
			23:25:01 CST 2015. -->
		update ts_app_receivemessage
		<set>
			<if test="sendmessageuid != null">
				SendMessageUID = #{sendmessageuid},
			</if>
			<if test="receiveuseruid != null">
				ReceiveUserUID = #{receiveuseruid},
			</if>
			<if test="sendtime != null">
				SendTime = #{sendtime},
			</if>
			<if test="isread != null">
				IsRead = #{isread},
			</if>
			<if test="readtime != null">
				ReadTime = #{readtime},
			</if>
			<if test="createby != null">
				CreateBy = #{createby},
			</if>
			<if test="createdate != null">
				CreateDate = #{createdate},
			</if>
		</set>
		where UID = #{uid}
	</update>
	<select id="selectMessageDetailSingle" resultType="org.campus.model.ConversationDetail"
		parameterType="java.lang.String">
        SELECT * from ((
	        SELECT
		        b.*, TRUE AS holdFlag
	        FROM
		    (
			    SELECT
				    SendMessageUID
			    FROM
				    ts_app_receivemessage
			    WHERE
				    ReceiveUserUID = #{objUserId}
		        ) AS a
	            INNER JOIN (
		        SELECT
			        UID, 
			        SendUserUID, 
			        MsgContent,
			        PicturePath,
			        SoundPath,
			        SendTime
		        FROM
			        ts_app_sendmessage
		        WHERE
			        SendUserUID = #{sessionUserId}
		            AND (GroupUID = '' OR GroupUID is NULL)
	            ) AS b 
	            ON a.SendMessageUID = b.UID
            )
            UNION ALL
	        (
		    SELECT 
		         b.*, FALSE AS holdFlag
		    FROM
			(
				SELECT
					SendMessageUID
				FROM
					ts_app_receivemessage
				WHERE
					ReceiveUserUID = #{sessionUserId}
			) AS a
		    INNER JOIN (
			    SELECT
				    UID,
				    SendUserUID,
				    MsgContent,
				    PicturePath,
				    SoundPath,
				    SendTime
			    FROM
				    ts_app_sendmessage
			    WHERE
				    SendUserUID = #{objUserId}
			        AND (GroupUID = '' OR GroupUID is NULL)
		     ) AS b ON a.SendMessageUID = b.UID
         )) as c ORDER BY c.SendTime ASC
	</select>
	<select id="selectMessageDetailSingleUp" resultType="org.campus.model.ConversationDetail"
        parameterType="java.lang.String">
        SELECT * from ((
            SELECT
                b.*, TRUE AS holdFlag
            FROM
            (
                SELECT
                    SendMessageUID
                FROM
                    ts_app_receivemessage
                WHERE
                    ReceiveUserUID = #{objUserId}
                ) AS a
                INNER JOIN (
                SELECT
                    UID, 
                    SendUserUID, 
                    MsgContent,
                    PicturePath,
                    SoundPath,
                    SendTime
                FROM
                    ts_app_sendmessage
                WHERE
                    SendUserUID = #{sessionUserId}
                    AND (GroupUID = '' OR GroupUID is NULL)
                ) AS b 
                ON a.SendMessageUID = b.UID WHERE SendTime &gt;= #{date,jdbcType=TIMESTAMP}
            )
            UNION ALL
            (
            SELECT 
                 b.*, FALSE AS holdFlag
            FROM
            (
                SELECT
                    SendMessageUID
                FROM
                    ts_app_receivemessage
                WHERE
                    ReceiveUserUID = #{sessionUserId}
            ) AS a
            INNER JOIN (
                SELECT
                    UID,
                    SendUserUID,
                    MsgContent,
                    PicturePath,
                    SoundPath,
                    SendTime
                FROM
                    ts_app_sendmessage
                WHERE
                    SendUserUID = #{objUserId}
                    AND (GroupUID = '' OR GroupUID is NULL)
             ) AS b ON a.SendMessageUID = b.UID WHERE SendTime &gt;= #{date,jdbcType=TIMESTAMP}
         )) as c ORDER BY c.SendTime ASC
    </select>
    <select id="selectMessageDetailSingleDown" resultType="org.campus.model.ConversationDetail"
        parameterType="java.lang.String">
        SELECT * from ((
            SELECT
                b.*, TRUE AS holdFlag
            FROM
            (
                SELECT
                    SendMessageUID
                FROM
                    ts_app_receivemessage
                WHERE
                    ReceiveUserUID = #{objUserId}
                ) AS a
                INNER JOIN (
                SELECT
                    UID, 
                    SendUserUID, 
                    MsgContent,
                    PicturePath,
                    SoundPath,
                    SendTime
                FROM
                    ts_app_sendmessage
                WHERE
                    SendUserUID = #{sessionUserId}
                    AND (GroupUID = '' OR GroupUID is NULL)
                ) AS b 
                ON a.SendMessageUID = b.UID WHERE SendTime &lt;= #{date,jdbcType=TIMESTAMP}
            )
            UNION ALL
            (
            SELECT 
                 b.*, FALSE AS holdFlag
            FROM
            (
                SELECT
                    SendMessageUID
                FROM
                    ts_app_receivemessage
                WHERE
                    ReceiveUserUID = #{sessionUserId}
            ) AS a
            INNER JOIN (
                SELECT
                    UID,
                    SendUserUID,
                    MsgContent,
                    PicturePath,
                    SoundPath,
                    SendTime
                FROM
                    ts_app_sendmessage
                WHERE
                    SendUserUID = #{objUserId}
                    AND (GroupUID = '' OR GroupUID is NULL)
             ) AS b ON a.SendMessageUID = b.UID WHERE SendTime &lt;= #{date,jdbcType=TIMESTAMP}
         )) as c ORDER BY c.SendTime ASC
    </select>
</mapper>